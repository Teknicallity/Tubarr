name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*

jobs:
  # github_publish:
  #   runs-on: ubuntu-latest
  #   # strategy:
  #   #   max-parallel: 4
  #   #   matrix:
  #   #     python-version: [3.7, 3.8, 3.9]
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: list
  #       run: ls

  #     - name: Build Changelog
  #       id: github_release
  #       uses: mikepenz/release-changelog-builder-action@v5
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Create Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         body: ${{steps.github_release.outputs.changelog}}

  dockerhub_publish:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: teknicallity/tubarr
          tags: |
            type=semver,pattern={{version}}
            latest

      - name: env meta output tags
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: echo "$TAGS"
          
      - name: env meta output labels
        env:
          LABELS: ${{ steps.meta.outputs.labels }}
        run: echo "$LABELS"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
