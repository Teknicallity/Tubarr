name: Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
    branches:
      - master

jobs:
  # github_publish:
  #   runs-on: ubuntu-latest
  #   # strategy:
  #   #   max-parallel: 4
  #   #   matrix:
  #   #     python-version: [3.7, 3.8, 3.9]
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: list
  #       run: ls

  #     - name: Build Changelog
  #       id: github_release
  #       uses: mikepenz/release-changelog-builder-action@v5
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Create Release
  #       uses: softprops/action-gh-release@v2
  #       with:
  #         body: ${{steps.github_release.outputs.changelog}}

  dockerhub_publish:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: teknicallity/tubarr

      - name: env meta output tags
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
        run: echo "$TAGS"
          
      - name: env meta output labels
        env:
          LABELS: ${{ steps.meta.outputs.labels }}
        run: echo "$LABELS"

      # - name: Build and push Docker image
      #   id: push
      #   uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: 
      #       ${{ steps.meta.outputs.tags }}
      #       latest
      #     labels: ${{ steps.meta.outputs.labels }}

      # - name: Generate artifact attestation
      #   uses: actions/attest-build-provenance@v1
      #   with:
      #     subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
